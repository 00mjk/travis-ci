== Standalone AMQP consumer

+ ActiveRecord::Base.cache { x }
+ workers heartbeat/listing
+ Finish unfinished jobs after a timeout of 1 hour and add a note to the log
+ started_at and duration not updated
+ GET staging.travis-ci.org/queues/16497.json ??
+ queue/jobs listing
+ travis-worker/travis-hub: should clear existing log on job:test:start (for requeued jobs)
+ optimize: https://gist.github.com/7fa474b1256bac72be8b
+ n+1 issue with artifacts (probably on repository/:id/builds.json)
+ make sure we don't transfer the log unless it's needed
+ email connection to postmark failing
+ ssl issue while sending emails: http://jira.codehaus.org/browse/JRUBY-5529
+ fix nokogiri/css_inliner issue
+ testing: dump the production database and test the migrations
+ travis-worker: undefined method `try' for nil:NilClass in app:79
+ travis-worker: make vagrant work without bundle exec (i.e. require bundle/setup in Vagrantfile?)
+ travis-hub: should read the db config from the (heroku) env var if present
+ ActiveSupport notifications for logging
+ have log levels (so turning logging on/off in production will be easy)
+ travis-worker: thor travis:worker:set (config var)
+ travis-boxes: make sure rails uses tmpfs for mysql
+ travis-ci: fix the stats page
+ travis-worker/hub: make heartbeat message per machine, not worker
+ travis-worker: add all of the status report to the heartbeat
+ travis-hub: truncate the log on job:test:start
+ travis-build: extract travis-support to a separate repo
+ travis-hub: consolidate logging to use travis-support/logging
+ travis-ci/hub/worker/core: extract amqp classes to a common amqp abstraction in travis-support

- rabbitmq message rate stats

- travis-ci: add additional worker status infos to json and display the current build in the client
- travis-ci: add tests for stats
- travis-ci: add tests for github login that protect against changes in oauth etc
- travis-ci: move json specs (and maybe other specs) to travis-core
- travis-ci: ability to publish temporary messages from cli to web (persistent and through pusher), like "workers are going down for upgrade"

- travis-hub: re-enqueue and clean up stalled jobs
- travis-hub: have the hub respond to SIGTERM and shut down gracefully
- travis-hub: wrap hub sql operations in a transaction (not sure, this will be super complicated to do)

- travis-worker: make command messages expire after 2 sec or so
- travis-worker: remote worker maintenance
- travis-worker: add the last log line to status
- travis-worker: after state changes send an extra state update message
- travis-worker: change the naming scheme to railslove.travis-ci.org:ruby-1:worker-1

- travis-core: make workers regular state machines, send pusher notifications on all state changes, send irc notifications on errors
- travis-core: all config jobs get pushed to builds.common. use a builds.config queue instead that is shared by all workers


- performance: builds seem inacceptably slow:
    http://travis-ci.org/#!/travis-ci/travis-core/builds/345890
    => Finished in 150.82 seconds
    the same build locally:
    => Finished in 21.5 seconds


== Sproutcore

+ fix matrix
+ figure out call stack error :/
+ fix tests for new binding pattern
+ fix tests in jasmine-headless-webkit
+ port log parsing
+ fix stats and profile pages
+ port service hooks
+ implement search controller and view
+ hook up pusher events
+ hook up time changes
+ port small stuff like the sidebar toggle

- add tests for controller layer
- add acceptance tests
- add service hook specs
- test task/script to add some workers and jobs to a local redis
- load json fixtures generated from real server/app data
- make tests run on travis-ci.org!

- debounce/throttle search keyboard events
- fix search (does not propagate loaded records to the list)

- try https://github.com/antsa/sassy_noise

== Statemachine

+ move Worker to Notification:Worker
+ json for configure tasks
+ make Travis.config a Hashr instance
+ ensure Task::Test can cope with incremental updates
+ configure notifications receivers
+ improve specs for notifications receivers (actually hook receivers up to the dispatcher)
+ spec Travis::Config
+ spec Pusher notifications
+ go through all models and add pending specs
+ go through all specs and do some cleanup
+ add TestsController
+ add Pusher notification specs for actual messages sent
+ add JSON specs for build:queued and build:removed event payloads
+ move actions from builds_controller to tasks_controller and use routes to keep the /builds url
+ add data migrations
+ fix n+1 queries: https://gist.github.com/058e40dc43b3eb5ac64c

- the worker doesn't seem to notify about task:configure:started
- calculate build duration from matrix.sum(&:duration) or similar

- later: make payload instances Hashrs and rewrite lib/github

# Api changes

- client: use task route for looking up child builds
- client: for configure jobs show "?" instead of a build number
- config: change queues configuration section


# Commits not ported, double-check they're not necessary any more

f22a63eb	joshk	fixed an issue with the build not updating due to extra from the worke...
0c8464b5	joshk	update tests to respect that config on build now returns a default has...
6e9d0fbe	joshk	Revert "update tests to respect that config on build now returns a def...
9cd7082c	joshk	Sadly this breaks the workers, ugly hax coming soon
a990b6f1	joshk	notifications fix + test : second attempt, this time with less breakag...

# Commits to have triple-checked by their authors

cbfc4f37	joelmahoney	Make status PNG response match the JSON/XML API responses


